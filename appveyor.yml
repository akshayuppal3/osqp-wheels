# As config was originally based on an example by Olivier Grisel. Thanks!
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
clone_depth: 50

# No reason for us to restrict the number concurrent jobs
max_jobs: 100

environment:
  global:
      BUILD_COMMIT: adf566681a4b34bfaf1a7f09cea47fed8742eb13
      NP_BUILD_DEP: "numpy==1.10.4"
      NP_TEST_DEP: "numpy==1.10.4"
      MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
      MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
      WHEELHOUSE_UPLOADER_USERNAME: travis-worker
      WHEELHOUSE_UPLOADER_SECRET:
        secure:
            9s0gdDGnNnTt7hvyNpn0/ZzOMGPdwPp2SewFTfGzYk7uI+rdAN9rFq2D1gAP4NQh

  matrix:
    - PYTHON: C:\Python36
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 32

    - PYTHON: C:\Python36-x64
      PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64

    - PYTHON: C:\Python35
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 32

    - PYTHON: C:\Python35-x64
      PYTHON_VERSION: 3.5
      PYTHON_ARCH: 64

    - PYTHON: C:\Python27
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 32

    - PYTHON: C:\Python27-x64
      PYTHON_VERSION: 2.7
      PYTHON_ARCH: 64

install:
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - python -m pip install -U pip

  #Set environment for build if 64bit
  - IF "%PYTHON_ARCH%"=="64" ( call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64) ELSE ( "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86)
  # # Fix MSVC builds for 64-bit Python. See:
  # # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
  # - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

  # Install the build dependencies of the project.
  - pip install %NP_BUILD_DEP% scipy future
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install wheel==0.26
  # Build wheel
  - cd %REPO_DIR%
  - git submodule update --init
  - git checkout %BUILD_COMMIT%
  - python setup.py bdist_wheel
  - cd ..

build: false  # Not a C# project. Build stuff at test step instead

test_script:
  # Install the test dependencies
  - pip install %NP_TEST_DEP% scipy future pytest
  - pip install --pre --no-index --find-links .\%REPO_DIR%\dist %PKG_NAME%
  - cd %REPO_DIR%
  - pytest
  - cd ..

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
- path: $(REPO_DIR)\dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - python -m wheelhouse_uploader upload --no-update-index --no-ssl-check --local-folder=%REPO_DIR%\dist wheels

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth
  # usage on our rackspace account.
  - '%APPDATA%\pip\Cache'
